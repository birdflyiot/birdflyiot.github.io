<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 飞鸟物联·智享云端</title>
    <link>https://birdflyiot.github.io/posts/</link>
    <description>Recent content in Posts on 飞鸟物联·智享云端</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Feb 2020 09:04:35 +0800</lastBuildDate>
    
	<atom:link href="https://birdflyiot.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Basemap手册——第二章进阶（一）学习绘制疫情地图</title>
      <link>https://birdflyiot.github.io/posts/basemap%E6%89%8B%E5%86%8C%E7%AC%AC%E4%BA%8C%E7%AB%A0%E8%BF%9B%E9%98%B6%E4%B8%80%E5%AD%A6%E4%B9%A0%E7%BB%98%E5%88%B6%E7%96%AB%E8%AF%B7%E5%9C%B0%E5%9B%BE/</link>
      <pubDate>Sat, 01 Feb 2020 09:04:35 +0800</pubDate>
      
      <guid>https://birdflyiot.github.io/posts/basemap%E6%89%8B%E5%86%8C%E7%AC%AC%E4%BA%8C%E7%AB%A0%E8%BF%9B%E9%98%B6%E4%B8%80%E5%AD%A6%E4%B9%A0%E7%BB%98%E5%88%B6%E7%96%AB%E8%AF%B7%E5%9C%B0%E5%9B%BE/</guid>
      <description>0x01 前言 大约在n年前（n&amp;gt;=2）,大约也是在这样的一个冬季，我倚着暖气，喝着红茶，码着键盘，在Base Map魅力下，在世界地图上遨游。窗外的雪花纷纷扬扬，压在枯枝上，盖在松柏顶，世界一片洁白纯净。大街上零零星星有三两个行人，让空旷的街道更显得静谧却不失安详。
今天的街上也是这样，零零星星的三两个行人。行色匆匆，淡蓝色的口罩难掩神情的恐慌。没有大雪封路，没有冬风凛冽，即使天空蔚蓝，阳光明媚，也难免让人感到一丝萧瑟。
随着疫情的蔓延，疫情地图开始在各个媒体平台出现，它极大的方便了人们对疫情实时动态的了解。我也想到了两年前发的这篇博文【译】Basemap手册——第一章 入门（始于颜值），之前一直没有在意，今天翻翻这篇博文，看到一些留言等，我打算继续翻译第二篇，顺带做一个自己的疫情地图，这就是技术宅的宅生活吧！
武汉加油，中国加油 0x02 环境配置 有评论反映部分文件下载不了，安装之后报错，刚好我这个电脑上没有安装Basemap，我就重新安装一下下。我依然参照了神农尝百草&amp;mdash;Windows环境下为Python3.X安装basemap的文章内容，按照左后一种安装方法，再次对博主moxigandashu表示感谢。如果安装不成功，可以参照官方文档Installing ，谨记谨记，有问题，看文档，看官方文档，才是正解！网上大多数博客都属于东拼西凑，包括我这篇文章也是，限于我的能力，错误疏漏在所难免，所以在学习技术的时候，多看官方文档才是提高技术的根本之道！
 确定python版本  我的版本是python 3.8.0 64位
 下载pyproj和basemap
在https://www.lfd.uci.edu/~gohlke/pythonlibs/ 下载
basemap‑1.2.1‑cp38‑cp38‑win_amd64.whl文件比较大，可能要多等几分钟。
pyproj‑2.4.2.post1‑cp38‑cp38‑win_amd64.whl
实测这些文件都是可以正常下载的。
  打开cmd，进入所下载的文件的目录
  安装pyproj和basemap
pip install basemap‑1.2.1‑cp38‑cp38‑win_amd64.whl
pip install pyproj‑2.4.2.post1‑cp38‑cp38‑win_amd64.whl 
  测试安装结果 from mpl_toolkits.basemap import Basemap
  0x03下面开始正式翻译 原文地址可查看basemaptutorial
Basemap 所有用Basemap库创建的地图，在创建之前都需要创建一个Basemap实例：
mpl_toolkits.basemap.Basemap(llcrnrlon=None, llcrnrlat=None, urcrnrlon=None, urcrnrlat=None, llcrnrx=None, llcrnry=None, urcrnrx=None, urcrnry=None, width=None, height=None, projection=’cyl’, resolution=’c’, area_thresh=None, rsphere=6370997.0, ellps=None, lat_ts=None, lat_1=None, lat_2=None, lat_0=None, lon_0=None, lon_1=None, lon_2=None, o_lon_p=None, o_lat_p=None, k_0=None, no_rot=False, suppress_ticks=True, satellite_height=35786000, boundinglat=None, fix_aspect=True, anchor=’C’, celestial=False, round=False, epsg=None, ax=None) 这个构造函数里面包含好多个可选的参数，它们的用法如下：</description>
    </item>
    
    <item>
      <title>Markdownv常用语法</title>
      <link>https://birdflyiot.github.io/posts/markdownv%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Fri, 10 Jan 2020 16:40:32 +0800</pubDate>
      
      <guid>https://birdflyiot.github.io/posts/markdownv%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</guid>
      <description>markdown常用语法笔记 标题 使用#号标记 段落 使用两个以上的空格加回车 字体(成对出现) 斜体用*或者_
粗体用**或者__
粗斜体用***或者___
分割线 在一行中使用三个以上的星号 减号 底线，行内不能有其他东西
下划线 用来成对标记
删除线 成对的两个波浪线 ~~ ~~
脚注 中括号加尖号[^]
无序列表 用单个的星号、加号、减号
有序列表 数字加上点
列表嵌套 在子列表前面加四个空格
区块 在段落开头使用一个&amp;gt;加一个空格
如果使用两个&amp;raquo;那就是嵌套的区块
代码  如果是段落中的一句代码，用反引号括起来 代码区块用四个空格或者```包裹起来，并指定一种语言  链接使用[]和()组合或者但用&amp;lt;&amp;gt; 图片   开头一个！
  接着一个方括号，里面放上替代文字
  接着一个小括号，里面放上网址，还可以加一对引号，里面放属性文字
  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://birdflyiot.github.io/posts/%E8%AF%91basemap%E6%89%8B%E5%86%8C%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E9%98%B6%E4%BA%8C/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://birdflyiot.github.io/posts/%E8%AF%91basemap%E6%89%8B%E5%86%8C%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BF%9B%E9%98%B6%E4%BA%8C/</guid>
      <description>绘制数据 添加注释 用带箭头的文本给地图上的点添加注释。用不带箭头的文本添加注释的方法，参见 text annotate(*args, **kwargs)
 这个方法不属于Basemap，而是属于matplotlib，所以只能和plot、axis一起使用。 第一个参数是文本的内容。 xy是包含x、y轴坐标的列表，这个坐标点就是箭头指向的点。 xycoords 指定xy使用的坐标类型：  data表示坐标使用的data（投影坐标） offset points表示points的偏移量 axes pixels 表示坐标左下角的像素点 其他参数参见annotation docs   xytext 文本标签的位置，在箭头的起点 textcoords 指定坐标类型，和xycoords一样 arrowprops 设置箭头属性，参见Line2D  color 文本的颜色，参见This page explains all the color options  标记处武汉 from mpl_toolkits.basemap import Basemapimport matplotlib.pyplot as pltmap = Basemap(projection=&amp;#39;ortho&amp;#39;, lat_0=30, lon_0=110)map.drawmapboundary(fill_color=&amp;#39;aqua&amp;#39;)map.fillcontinents(color=&amp;#39;coral&amp;#39;,lake_color=&amp;#39;aqua&amp;#39;)map.drawcoastlines()x, y = map(114, 30) # 经纬度坐标 东经114°，北纬30° x2, y2 = (80, -20)plt.</description>
    </item>
    
  </channel>
</rss>